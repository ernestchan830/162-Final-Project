{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <h3>{{this.title}}</h3>
        <p>{{this.content}}</p>
        <div class="post-status-bar" id="post{{this.id}}">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            {{#ifCond this.username user.username}}
                <button data-id="{{this.id}}" class="delete-button" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></button>
            {{else}}
                <button data-id="{{this.id}}" class="like-button" onclick="handleLikeClick(event)">♥</button>
            {{/ifCond}}
            <p class="like-count">{{this.likes}} Likes</p>
            <p>Posted by {{this.username}} on {{this.timestamp}}</p>
        </div>        
    </div>
</div>
<script>

    function handleLikeClick(event) {
        console.log('like button clicked');
        const postId = event.target.getAttribute('data-id');

        // you might want to "fetch" something...      
        fetch(`/like/${postId}`, {
            method: 'POST'
        })
        .then(statusCheck)
        .then(res => res.likes)
        .then(res => updateLikeCount(res, postId))
        .catch(error => console.error(error));
    }

    function handleDeleteClick(event) {
        console.log('delete button clicked');
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        // you might want to "fetch" something...        
    }    

    function updateLikeCount(res, postId) {
        let post = document.getElementById(`post${postId}`);
        if (!post) {
            throw new Error('Post not found')
        }

        let likeCountElement = post.querySelector('.like-count');
        if (!likeCountElement) {
            throw new Error('Like count element not found')
        }
        
        likeCountElement.innerText = `${res} Likes`;
    }

    function statusCheck(res) {
    if (!res.ok) {
        throw new Error('Failed to fetch: ' + res.statusText);
    }
    return res.json();  // Assuming the response is in JSON format
}

</script>